---
import Layout from "../layouts/Layout.astro";
import Landing from "../components/Landing.astro";
import Projects from "../components/Projects.astro";

import blogs from "../utils/blogs";
import Card from "../components/Card.astro";
import Cal from "../components/react/Cal.tsx";

//TODO: better typesafety

export interface Project {
  name: string;
  isArchived: boolean;
  homepageUrl: string;
  description?: string | null;
  createdAt: string;
  updatedAt: string;
  url: string;
  latestRelease: { tagName: string } | null;
  languages: { edges: { node: { name: string } }[] };
  repositoryTopics: { edges: { node: { topic: { name: string } } }[] } | null;
  owner: { id: string };
}

const githubUsername = import.meta.env.GITHUB_USERNAME;

const response = await fetch("https://api.github.com/graphql", {
  method: "POST",
  headers: {
    "Content-Type": "application/vnd.github+json",
    Authorization: `Bearer ${import.meta.env.GITHUB_ACCESS_TOKEN}`,
  },
  body: JSON.stringify({
    query: `
    {
user(login: "${githubUsername}") {
    id
    avatarUrl
    pinnedItems(first: 4, types: REPOSITORY) {
      nodes {
        ... on Repository {
          name
          isArchived
          archivedAt
          homepageUrl
          description
          createdAt
          updatedAt
          url
          owner {
          id
          }
          latestRelease {
            tagName
          }
          languages(first: 3) {
            edges {
              node {
                name
              }
            }
          }
          repositoryTopics(first: 5) {
            edges {
              node {
                topic {
                  name
                }
              }
            }
          }
        }
      }
    }
  }
}
  `,
  }),
});

if (!response.ok) {
  console.error("Unable to get pinned items from Github API: ", response);
}

const json = await response.json();

if (json.errors) {
  console.error("Error fetching pinned items from Github API: ", json.errors);
}

const projects = json?.data?.user?.pinnedItems?.nodes.filter(
  (project: Project) => project.name !== "portfolio",
);

const githubUserId = json?.data?.user?.id;
---

<Layout>
  <main class="flex flex-col space-y-10">
    <Landing
      title="Boston Rohan"
      imageUrl={json?.data?.user?.avatarUrl}
      body="Self taught developer currently working at"
      links={[
        { text: "Elevation Church.", url: "https://elevationchurch.org/" },
        { text: "code,", url: "https://github.com/BostonRohan" },
        {
          text: "listen to music,",
          url: "https://open.spotify.com/user/12151292580?si=908c62d3ccc04bf3",
        },
        { text: "watch anime.", url: "https://anilist.co/user/bosston/" },
      ]}
      icons={[
        {
          type: "linkedin",
          url: "https://www.linkedin.com/in/bostonrohan/",
        },
        {
          type: "github",
          url: "https://github.com/BostonRohan",
        },
      ]}
    />
    {projects && <Projects githubUserId={githubUserId} projects={projects} />}
    <section id="blog" class="scroll-m-16">
      <h2 class="md:text-3xl text-2xl font-bold dark:text-neutral-50 mt-5">
        Blog
      </h2>
      <p class="text-lg">a few thoughts I've had over the years</p>
      {
        blogs.map((blog) => {
          return (
            <a href={`/blog/${blog.title.replace(/\s+/g, "-").toLowerCase()}`}>
              <Card
                title={blog.title}
                body={blog.body}
                date={blog.date}
                extraInformation={`${blog.readTime} read`}
              />
            </a>
          );
        })
      }
    </section>
    <section class="space-y-4 pb-16 scroll-mt-16" id="contact">
      <h2 class="md:text-3xl text-2xl font-bold dark:text-neutral-50 mt-5">
        Contact me
      </h2>
      <Cal client:load />
    </section>
  </main>
</Layout>
